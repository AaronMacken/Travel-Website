/* Default Styles */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* give everything inherit for box sizing, and set the body to border-box */
  /* this makes it easier to change box-sizing properties for other things
  if the situation ever arises */
  box-sizing: inherit; }

html {
  font-size: 62.5%;
  /* Setting the base font size to 62.5%
    this is 62.5% of the browsers default font size - 16px
    thus making our base font size 10px and making it easy to use rem for all children measurements
    This is a good practice to do incase users change the default font size. Very flexible */ }

body {
  /* Set all fonts in the body */
  font-family: "Montserrat", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box; }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(72, 106, 122, 0.6), rgba(28, 49, 58, 0.5)), url("https://images.unsplash.com/photo-1493514789931-586cb221d7a7?ixlib=rb-1.2.1&auto=format&fit=crop&w=1351&q=80");
  clip-path: polygon(0 1%, 100% 0%, 100% 74%, 0 88%);
  /* Reference for logoBox */
  position: relative; }

/* Container that is holding the image */
.header__logoBox {
  position: absolute;
  /* These attributes need a point of reference. This point of reference will be the header element that we set to pos: rel */
  top: 4rem;
  left: 4rem; }

.header__logo {
  height: 10rem;
  color: #fff;
  /* width will automatically scale based off of the height. */ }

.header__textBox {
  position: absolute;
  top: 45%;
  left: 50%;
  /* shifts half of the elements width and height, thus centering the element */
  transform: translate(-50%, -50%);
  /* Since we set our btn to inline-block, it will be treated as text. thus, we can center it with text-align center */
  text-align: center; }

.headingPrimary {
  color: #fff;
  text-transform: uppercase;
  /* this can be used to prevent shakyness with animations */
  backface-visibility: hidden;
  margin-bottom: 6rem; }

.headingPrimary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.8rem;
  animation-name: moveInLeft;
  animation-duration: 3s; }

.headingPrimary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 400;
  letter-spacing: 1.5rem;
  /* animation-name: moveInRight;
    animation-duration: 3s; */
  /* short hand */
  animation: moveInRight 3s 0.75s;
  animation-fill-mode: backwards;
  /* determines the speed of the animation, begin fast - end slow, begin slow - end fast */
  /* animation-timing-function: ease-in; */
  /* animation-iteration-count: 3; - repeat animation x times*/
  /* animation-delay: 3s; - begin animation after x seconds*/ }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translateY(0); } }

/* Pseudo class that states the button functions as an anchor link */
/* link / visited - default: blue / purple */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  border-radius: 10rem;
  display: inline-block;
  /* select all transitions w/ all */
  transition: all 0.2s;
  /* set this for the button after effect */
  position: relative;
  font-size: 1.6rem; }

.btn:hover {
  /* move up */
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4); }

.btn:active {
  transform: translateY(0);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.3); }

.btn--white {
  background-color: #fff;
  color: #777; }

.btn--animated {
  animation: moveInBottom 1s ease-out 1.5s;
  /* automatically apply 0% styles before animation starts */
  animation-fill-mode: backwards; }
