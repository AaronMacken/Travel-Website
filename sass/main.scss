@import "base/animations";
@import "base/base";
@import "base/typography";
@import "base/utilities";


@import "abstracts/functions";
@import "abstracts/variables";
@import "abstracts/mixins";

@import "pages/home";

@import "components/button";


.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary, 0.6),
      rgba($color-primary-dark, 0.5)
    ),
    url("https://images.unsplash.com/photo-1493514789931-586cb221d7a7?ixlib=rb-1.2.1&auto=format&fit=crop&w=1351&q=80");
  clip-path: polygon(0 1%, 100% 0%, 100% 74%, 0 88%);
  /* Reference for logoBox */
  position: relative;

  /* Container that is holding the image */
  &__logoBox {
    position: absolute;
    /* These attributes need a point of reference. This point of reference will be the header element that we set to pos: rel */
    top: 4rem;
    left: 4rem;
  }
  &__logo {
    height: 10rem;
    color: $color-white;
  }
  &__textBox {
    position: absolute;
    top: 45%;
    left: 50%;
    /* shifts half of the elements width and height, thus centering the element */
    transform: translate(-50%, -50%);
    /* Since we set our btn to inline-block, it will be treated as text. thus, we can center it with text-align center */
    text-align: center;
  }
}

.headingPrimary {
  color: $color-white;
  text-transform: uppercase;
  /* this can be used to prevent shakyness with animations */
  backface-visibility: hidden;
  margin-bottom: 6rem;

  &--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.8rem;
    animation-name: moveInLeft;
    animation-duration: 3s;
  }

  &--sub {
    display: block;
    font-size: 2rem;
    font-weight: 400;
    letter-spacing: 1.5rem;
    /* animation-name: moveInRight;
      animation-duration: 3s; */
    /* short hand */
    animation: moveInRight 3s 0.75s;
    animation-fill-mode: backwards;
    /* determines the speed of the animation, begin fast - end slow, begin slow - end fast */
    /* animation-timing-function: ease-in; */
    /* animation-iteration-count: 3; - repeat animation x times*/
    /* animation-delay: 3s; - begin animation after x seconds*/
  }
}

.btn {
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    border-radius: 10rem;
    display: inline-block;
    /* select all transitions w/ all */
    transition: all 0.2s;
    /* set this for the button after effect */
    position: relative;
    font-size: 1.6rem;
  }
  &:hover {
    /* move up */
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba($color-black, 0.4);
  }
  &:active {
    transform: translateY(0);
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.3);
  }
  &--white {
    background-color: $color-white;
    color: $color-grey-dark;
  }
  &--animated {
    animation: moveInBottom 1s ease-out 1.5s;
    /* automatically apply 0% styles before animation starts */
    animation-fill-mode: backwards;
  }
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
